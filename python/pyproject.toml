[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cornserve"
description = "Easy, fast, and scalable multimodal agentic AI"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]
requires-python = ">=3.11"
dependencies = [
    "grpcio-tools",
    "tyro",
    "kubernetes_asyncio",
]
dynamic = ["version"]

[project.optional-dependencies]
sidecar = ["torch"]
eric = [
  "fastapi",
  "uvicorn[standard]",
  "pyzmq",
  "msgspec",
  "psutil",
  "torch>=2.5.0",
  "transformers",
  "huggingface_hub",
  "pillow",
  "einops",
  "flash-attn",
]
dev = ["grpcio-tools", "black", "pyright", "ruff", "pytest", "expecttest", "cornserve[sidecar,eric]"]

[tool.setuptools.dynamic]
version = { attr = "cornserve.__version__" }

[tool.ruff]
line-length = 120

[tool.ruff.lint]
pydocstyle.convention = "google"
select = [
  "E",   # pycodestyle error
  "F",   # pyflakes
  "D",   # pydocstyle
  "PL",  # pylint
  "N",   # pep8-naming
  "B",   # flake8-bugbear (detects likely bugs)
  "G",   # flake8-logging-format (complains about logging)
  "SIM", # flake8-simplify (suggests code simplifications)
]
exclude = [
  "cornserve/task_executors/eric/models/*.py"
]
ignore = [
  "PLW0603",  # Global statement
  "PLR2004",  # Magic value
  "PLR0913",  # Too many arguments
  "PLR0402",  # `import torch.nn as nn` is fine
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401", "F403"]
"cornserve/services/**/server.py" = ["N802"]

[tool.pyright]
exclude = [
    "**/*_pb2.py",
    "**/*_pb2_grpc.py",
]
