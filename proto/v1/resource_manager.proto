syntax = "proto3";

package cornserve.resource_manager;

import "common.proto";

service ResourceManager {
  // Deploy a new unit task
  rpc DeployUnitTask(DeployUnitTaskRequest) returns (DeployUnitTaskResponse);

  // Tear down a unit task
  rpc TeardownUnitTask(TeardownUnitTaskRequest) returns (TeardownUnitTaskResponse);

  // Health checking
  rpc Healthcheck(HealthcheckRequest) returns (HealthcheckResponse);

  // Scale up a unit task
  rpc ScaleUnitTask(ScaleUnitTaskRequest) returns (ScaleUnitTaskResponse);
}

// Deploy a new task
message DeployUnitTaskRequest {
  // Task to deploy
  common.UnitTask task = 1;
}

message DeployUnitTaskResponse {
  // Success or failure
  common.Status status = 1;
}

// Tear down a task
message TeardownUnitTaskRequest {
  // Task to tear down
  common.UnitTask task = 1;
}

message TeardownUnitTaskResponse {
  // Success or failure
  common.Status status = 1;
}

// Health checking
message TaskManagerStatus {
  common.UnitTask task = 1;
  common.Status status = 2;
}

message HealthcheckRequest {}

message HealthcheckResponse {
  common.Status status = 1;
  repeated TaskManagerStatus task_manager_statuses = 2;
}

message ScaleUnitTaskRequest {
  // Task to scale
  common.UnitTask task = 1;
  // Number of GPUs to add or remove
  int32 num_gpus = 2;
}

message ScaleUnitTaskResponse {
  // Success or failure
  common.Status status = 1;
}
