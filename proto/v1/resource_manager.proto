syntax = "proto3";

package cornserve.resource_manager;

import "common.proto";

service ResourceManager {
  // Notify the resource manager of a new app's task requirements
  rpc ReconcileNewApp(ReconcileNewAppRequest) returns (ReconcileNewAppResponse);

  // Notify the resource manager of an app that has been removed
  rpc ReconcileRemovedApp(ReconcileRemovedAppRequest) returns (ReconcileRemovedAppResponse);

  // Health checking
  rpc Healthcheck(HealthcheckRequest) returns (HealthcheckResponse);
}

message TaskConfig {
  // Type of task
  common.TaskType type = 1;

  // JSON-encoded config generated from the Task Pydantic model
  string config = 2;
}

// New app registration
message ReconcileNewAppRequest {
  // ID of the app that is being registered
  string app_id = 1;

  // Task configs
  repeated TaskConfig task_configs = 2;
}

message ReconcileNewAppResponse {
  common.Status status = 1;
}

// App removal
message ReconcileRemovedAppRequest {
  string app_id = 1;
}

message ReconcileRemovedAppResponse {
  common.Status status = 1;
}

// Health checking
message TaskManagerStatus {
  string task_manager_id = 1;
  common.Status status = 2;
}

message HealthcheckRequest {}

message HealthcheckResponse {
  common.Status status = 1;
  repeated TaskManagerStatus task_manager_statuses = 2;
}
